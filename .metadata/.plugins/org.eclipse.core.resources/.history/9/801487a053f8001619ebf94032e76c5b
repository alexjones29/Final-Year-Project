package main;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.util.ArrayList;
import java.util.List;

/**
 * The Class CiphertextReader.
 */
public class CiphertextReader
{

	private static final int BUFFER_SIZE = 1024;

	/**
	 * Read in cipher text and store in an arraylist to return to the main
	 * application.
	 *
	 * @return the list
	 */
	public List readInCipherText(File file)
	{
		ArrayList<CipherSymbol> cipherText = new ArrayList<CipherSymbol>();
		
		 try (InputStream in = new FileInputStream(file);
	             Reader reader = new InputStreamReader(in, "ASCII");
	             // buffer for efficiency
	             Reader buffer = new BufferedReader(reader)) {
			 int r;
				while ((r = reader.read()) != -1)
				{
					char ch = (char) r;
					System.out.println("Do something with " + ch);
				}
			}
		 
		
		
		
//		FileInputStream in = null;
//		try
//		{
//			in = new FileInputStream(file);
//			FileChannel ch = in.getChannel();
//		
//			ByteBuffer buf = ByteBuffer.allocateDirect(BUFFER_SIZE); 
//
//			Charset cs = Charset.forName("ASCII"); 
//
//			int rd;
//			while ((rd = ch.read(buf)) != -1)
//			{
//				buf.rewind();
//				CharBuffer chbuf = cs.decode(buf);
//				for (int i = 0; i < chbuf.length(); i++)
//				{
//					CipherSymbol symbol = new CipherSymbol(String.valueOf(chbuf.get()));
//					cipherText.add(symbol);
//					System.out.print(symbol.getSymbolValue());
//				}
//				buf.clear();
//			}
//		} catch (FileNotFoundException e)
//		{
//			e.printStackTrace();
//		} catch (IOException e)
//		{
//			e.printStackTrace();
//		}
//		
		return cipherText;

	}
}
