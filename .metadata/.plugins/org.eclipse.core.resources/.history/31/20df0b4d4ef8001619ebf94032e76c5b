package main;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.channels.FileChannel;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.List;

/**
 * The Class CiphertextReader.
 */
public class CiphertextReader
{

	/**
	 * Read in cipher text and store in an arraylist to return to the main
	 * application.
	 *
	 * @return the list
	 */
	public List readInCipherText(File file)
	{
		ArrayList<CipherSymbol> cipherText = new ArrayList<CipherSymbol>();
		FileInputStream in = null;
		try
		{
			in = new FileInputStream(file);
			FileChannel ch = in.getChannel();
			ByteBuffer buf = ByteBuffer.allocateDirect(256); 

			Charset cs = Charset.forName("ASCII"); 

			int rd;
			while ((rd = ch.read(buf)) != -1)
			{
				buf.rewind();
				CharBuffer chbuf = cs.decode(buf);
				for (int i = 0; i < chbuf.length(); i++)
				{
					CipherSymbol symbol = new CipherSymbol(chbuf.get(arg0))
					System.out.print(chbuf.get());
				}
				buf.clear();
			}
		} catch (FileNotFoundException e)
		{
			e.printStackTrace();
		} catch (IOException e)
		{
			e.printStackTrace();
		}
		
		return null;

	}
}
